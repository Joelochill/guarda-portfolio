name: Deploy Astro Frontend to Hostinger

env:
  TZ: Europe/Madrid # Timezone for logs

on:
  push:
    branches:
      - main
  repository_dispatch:
    types: ['website-deploy: sanity-update']
  workflow_dispatch: # Optional manual trigger

concurrency: # Prevents multiple simultaneous deployments
  group: deploy-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 10 # Failsafe against hung deployments

    permissions:
      contents: read
      deployments: write

    steps:
      - name: Debug timezone
        run: |
          date
          echo "Timezone: $TZ"

      # 1. CHECKOUT CODE (with full history)
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. SETUP NODE.JS (with caching)
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm' # Caches node_modules

      # 3. INSTALL DEPENDENCIES
      - name: Install dependencies
        run:
          | # Install with lockfile verification, checking for critical dependencies
          npm ci --prefer-offline
          npm audit --audit-level=critical

      # 4. BUILD PROJECT
      - name: Build Astro site
        run: npm run build
        env:
          SITE_URL: ${{ vars.SITE_URL }}
          SANITY_PROJECT_ID: ${{ vars.SANITY_PROJECT_ID }}
          SANITY_DATASET_NAME: ${{ vars.SANITY_DATASET_NAME }}
          PUBLIC_EMAILJS_KEY: ${{ vars.PUBLIC_EMAILJS_KEY }}
          PUBLIC_GOOGLE_ANALYTICS_ID: ${{ vars.PUBLIC_GOOGLE_ANALYTICS_ID }}
          NODE_ENV: production # Enables production optimizations

      # 5. DEPLOY VIA FTPS
      - name: Deploy to Hostinger
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        with:
          server: ${{ secrets.FTP_HOST }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          port: 21
          protocol: ftps
          local-dir: dist/
          server-dir: /public_html/
          dangerous-clean-slate: false # Prevents accidental deletions
          exclude: | # Never deploy these
            **/.git*
            **/.github*
            **/*.md
            **/.env*
            **/test*

      # 6. POST-DEPLOY CLEANUP
      - name: Cleanup build artifacts
        run: rm -rf dist/
        if: always()
